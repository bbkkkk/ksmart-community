<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <!--定义模块名称-->
    <property name="MODULE_NAME" value="pms" />
    <!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径-->
    <property name="LOG_HOME" value="${MODULE_NAME}log" />
    <!-- %m输出的信息,%p日志级别,%t线程名,%d日期,%c类的全名,%i索引【从数字0开始递增】,,, -->
    <!-- appender是configuration的子节点，是负责写日志的组件。 -->
    <!-- ConsoleAppender：把日志输出到控制台 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <!--这里替换成AspectLogbackEncoder-->
        <encoder class="com.yomahub.tlog.core.enhance.logback.AspectLogbackEncoder">
<!--            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>-->
            <pattern>
                [%d{yyyy-MM-dd HH:mm:ss.SSS}][%-5level][%replace(%caller{1}){'\t|Caller.{1}0| at|\r\n', ''}] ==> %msg%n
            </pattern>
        </encoder>
    </appender>
    <!-- RollingFileAppender：滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件 -->
    <!-- 以下的大概意思是：1.先按日期存日志，日期变了，将前一天的日志文件名重命名为XXX%日期%索引，新的日志仍然是demo.log -->
    <!--             2.如果日期没有发生变化，但是当前日志的文件大小超过1KB时，对当前日志进行分割 重命名-->
    <appender name="filelog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${LOG_HOME}/${MODULE_NAME}.log</File>
        <!-- rollingPolicy:当发生滚动时，决定 RollingFileAppender 的行为，涉及文件移动和重命名。 -->
        <!-- TimeBasedRollingPolicy： 最常用的滚动策略，它根据时间来制定滚动策略，既负责滚动也负责出发滚动 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 活动文件的名字会根据fileNamePattern的值，每隔一段时间改变一次 -->
            <!-- 文件名：log/smartmining-fileserver-.2017-12-05.0.log -->
            <fileNamePattern>${LOG_HOME}/${MODULE_NAME}-.%d.%i.log</fileNamePattern>
            <!-- 每产生一个日志文件，该日志文件的保存期限为30天 -->
            <maxHistory>30</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy  class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!-- maxFileSize:这是活动文件的大小，默认值是10MB，测试时可改成1KB看效果 -->
                <maxFileSize>30720KB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <!--这里替换成AspectLogbackEncoder-->
        <encoder class="com.yomahub.tlog.core.enhance.logback.AspectLogbackEncoder">
<!--            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>-->
            <pattern>
                [%d{yyyy-MM-dd HH:mm:ss.SSS}][%-5level][%replace(%caller{1}){'\t|Caller.{1}0| at|\r\n', ''}] ==> %msg%n
            </pattern>
        </encoder>
    </appender>
    <!-- 控制台输出日志级别 -->
    <root level="info">
        <appender-ref ref="STDOUT" />
    </root>
    <logger name="org.quartz" level="WARN">
        <appender-ref ref="STDOUT" />
    </logger>
    <!-- 指定项目中某个包，当有日志操作行为时的日志记录级别 -->
    <!-- com.lxk为根包，也就是只要是发生在这个根包下面的所有日志操作行为的权限都是DEBUG -->
    <!-- 级别依次为【从高到低】：FATAL > ERROR > WARN > INFO > DEBUG > TRACE  -->
    <logger name="org.springframework" level="WARN">
        <appender-ref ref="filelog" />
    </logger>
    <logger name="org.quartz" level="WARN">
        <appender-ref ref="filelog" />
    </logger>
    <logger name="com.ksmart" level="DEBUG">
        <appender-ref ref="filelog" />
    </logger>
    <logger name="jdbc.connection" additivity="false" level="WARN" >
        <!--<appender-ref ref="STDOUT" />-->
        <appender-ref ref="filelog" />
    </logger>
    <logger name="jdbc.resultset" additivity="false" level="WARN">
        <!--<appender-ref ref="STDOUT" />-->
        <appender-ref ref="filelog" />
    </logger>
    <logger name="jdbc.audit" additivity="false" level="WARN">
        <!--<appender-ref ref="STDOUT" />-->
        <appender-ref ref="filelog" />
    </logger>
    <logger name="jdbc.sqlonly" additivity="false" level="INFO">
        <appender-ref ref="STDOUT" />
        <appender-ref ref="filelog" />
    </logger>
    <logger name="jdbc.sqltiming" additivity="false" level="INFO">
        <appender-ref ref="STDOUT" />
        <appender-ref ref="filelog" />
    </logger>
    <logger name="com.zaxxer.hikari" additivity="false" level="WARN">
        <appender-ref ref="STDOUT" />
        <appender-ref ref="filelog" />
    </logger>
</configuration>